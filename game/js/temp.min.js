var main, main2;

function Main(Map) {
	var main = this;
	var count = 1;
	this.state = 2;
	this.Time;
	this.timeValue = 0;
	this.allDiv = Map;
	this.x = getArray(9);
	this.errorDiv = [];

	function item(x, y, html) {
		this.x = x;
		this.y = y;
		this.value = 0;
		this.html = html;
		this.optional = [true, true, true, true, true, true, true, true, true];
		this.optionalNumber = 9
	}
	for(var i = 0, x = 0, y = 0; i < this.allDiv.length; i += 1) {
		if(y == 9) {
			x += 1;
			y = 0
		}
		this.x[x][y] = new item(x, y, this.allDiv[i]);
		y += 1
	}
	item.prototype.setValue = function(v, del) {
		this.value = v;
		if(v == 0 || v == " ") {
			this.html.innerHTML = "";
			return
		} else {
			this.html.innerHTML = v
		}
		if(del == true) {
			var x = this.x;
			var y = this.y;
			var num = main.x[x][y].value - 1;
			var z = parseInt(y / 3) + parseInt(x / 3) * 3;
			for(var i = 0; i < 9; i += 1) {
				main.x[x][i].removeOptional(num);
				main.x[i][y].removeOptional(num);
				main.getZ(z, i).removeOptional(num)
			}
		}
	};
	item.prototype.removeOptional = function(v) {
		if(this.optional[v]) {
			this.optional[v] = false;
			this.optionalNumber -= 1;
			return true
		}
		return false
	};
	this.curItem = this.x[0][0];
	this.lock = getArray(9, false, 9);
	this.curChange = function(cur) {
		this.clearSign();
		this.curItem = this.x[parseInt(cur.dataset.x)][parseInt(cur.dataset.y)];
		this.sign()
	};
	this.move = function(x, y) {
		this.clearSign();
		if(parseInt(this.curItem.y) + y >= 9) {
			x += 1
		}
		var x = (parseInt(this.curItem.x) + x + 9) % 9;
		var y = (parseInt(this.curItem.y) + y + 9) % 9;
		this.curItem = this.x[x][y];
		this.sign()
	};
	this.valueChange = function(value) {
		if(this.lock[parseInt(this.curItem.x)][parseInt(this.curItem.y)]) {
			return
		}
		this.clearSign();
		this.curItem.setValue(value);
		this.checkError();
		this.WriteLog("第" + count++ + "次输入验证完成" + (this.errorDiv.length == 0 ? "没有错误" : ("共有" + this.errorDiv.length / 2 + "个错误")));
		if(this.errorDiv.length == 0) {
			if(this.checkFull()) {
				Victory();
				console.log("游戏胜利")
			}
		}
		this.sign()
	};
	this.getZ = function(z, z1) {
		return this.x[parseInt(z / 3) * 3 + parseInt(z1 / 3)][parseInt(z % 3) * 3 + z1 % 3]
	};
	this.checkError = function() {
		this.errorDiv = [];
		var Value = [getArray(9, 0, 9), getArray(9, 0, 9), getArray(9, 0, 9)];
		for(var x = 0; x < 9; x += 1) {
			for(var y = 0; y < 9; y += 1) {
				if(this.x[x][y].value > 0) {
					Value[0][x][parseInt(this.x[x][y].value) - 1] += 1;
				}
				if(this.x[y][x].value > 0) {
					Value[1][x][parseInt(this.x[y][x].value) - 1] += 1;
				}
				var curZ = this.getZ(x, y);
				if(curZ.value > 0) {
					Value[2][x][parseInt(curZ.value) - 1] += 1
				}
			}
		}
		for(var x = 0; x < 9; x += 1) {
			for(var y = 0; y < 9; y += 1) {
				if(Value[0][x][y] > 1) {
					for(var i = 0; i < 9; i += 1) {
						if(this.x[x][i].value == y + 1) {
							this.errorDiv.push(this.x[x][i])
						}
					}
				}
				if(Value[1][y][x] > 1) {
					for(var i = 0; i < 9; i += 1) {
						if(this.x[i][y].value == x + 1) {
							this.errorDiv.push(this.x[i][y])
						}
					}
				}
				if(Value[2][x][y] > 1) {
					for(var i = 0; i < 9; i += 1) {
						if(this.getZ(x, i).value == y + 1) {
							this.errorDiv.push(this.getZ(x, i))
						}
					}
				}
			}
		}
		return this.errorDiv
	};
	this.sign = function() {
		var sd = "#C8C49E",
			fw = "#F0E5CA",
			xt = "#489BA4",
			err = "#F76F6F",
			xtErr = "#",
			cur = "#4ECABD";
		for(var x = 0; x < 9; x += 1) {
			for(var y = 0; y < 9; y += 1) {
				if(this.lock[x][y]) {
					this.x[x][y].html.style = "background:" + sd + ";color:#111;"
				}
			}
		}
		if(this.curItem.value == 0) {
			for(var i = 0, x = this.curItem.x, y = this.curItem.y, z = parseInt(this.curItem.x / 3) * 3 + parseInt(this.curItem.y / 3); i < 9; i += 1) {
				this.x[x][i].html.style.background = fw;
				this.x[i][y].html.style.background = fw;
				this.getZ(z, i).html.style.background = fw
			}
		} else {
			for(var i = 0, value = parseInt(this.curItem.value); i < 9; i += 1) {
				for(var o = 0; o < 9; o += 1) {
					if(this.x[i][o].value == value) {
						this.x[i][o].html.style.background = xt
					}
				}
			}
		}
		for(var i = 0; i < this.errorDiv.length; i += 1) {
			this.errorDiv[i].html.style.background = err
		}
		this.curItem.html.style.background = cur;
	};
	this.clearSign = function() {
		for(var x = 0; x < 9; x += 1) {
			for(var y = 0; y < 9; y += 1) {
				this.x[x][y].html.style = ""
			}
		}
	};
	this.checkFull = function() {
		for(var x = 0; x < 9; x += 1) {
			for(var y = 0; y < 9; y += 1) {
				if(this.x[x][y].value == 0) {
					return false
				}
			}
		}
		return true
	};
	this.lockDiv = function(arrhtml) {};
	this.lockNotNullDiv = function() {
		for(var x = 0; x < 9; x += 1) {
			for(var y = 0; y < 9; y += 1) {
				if(this.x[x][y].value > 0) {
					this.lock[x][y] = true
				}
			}
		}
	};
	this.timing = function() {
		var tmp = main.timeValue;
		document.querySelector(".time").innerText = parseInt(tmp / 60) + ":" + (tmp % 60 < 10 ? "0" + tmp % 60 : tmp % 60);
		main.timeValue += 1
	};
	this.clearItemValue = function() {
		for(var x = 0; x < 9; x += 1) {
			for(var y = 0; y < 9; y += 1) {
				if(this.x[x][y].value > 0 && (!this.lock[x][y])) {
					this.x[x][y].setValue(0)
				}
			}
		}
	};
	this.clearlock = function() {
		this.lock = getArray(9, false, 9)
	};

	function getArray(w1, value, w2) {
		var array = [];
		for(var i = 0; i < w1; i += 1) {
			array[i] = [];
		}
		if(value != undefined) {
			for(var i = 0; i < w1; i += 1) {
				for(var o = 0; o < w2; o += 1) {
					array[i][o] = value
				}
			}
		}
		return array
	}
	this.copyAllItem = function() {
		var all = getArray(9);
		for(var x = 0; x < 9; x += 1) {
			for(var y = 0; y < 9; y += 1) {
				var c = this.x[x][y];
				var tmp = new item(x, y, c.html);
				tmp.value = c.value;
				tmp.optionalNumber = c.optionalNumber;
				for(var i = 0; i < 9; i += 1) {
					tmp.optional[i] = c.optional[i]
				}
				all[x][y] = tmp
			}
		}
		return all
	};
	this.Calculator = function() {
		var m = this;
		if(this.checkError().length > 0) {
			alert("请检查您的数独是否有错误");
			return
		}
		for(var x = 0; x < 9; x += 1) {
			for(var y = 0; y < 9; y += 1) {
				this.x[x][y].optional = [true, true, true, true, true, true, true, true, true];
				this.x[x][y].optionalNumber = 9
			}
		}
		for(var x = 0; x < 9; x += 1) {
			for(var y = 0; y < 9; y += 1) {
				this.x[x][y].setValue(this.x[x][y].value, true)
			}
		}

		function backup(i, value) {
			this.allItem = m.copyAllItem();
			this.curItem = new item(i.x, i.y, i.html);
			this.curItem.value = i.value;
			this.curItem.optionalNumber = i.optionalNumber;
			for(var o = 0; o < 9; o += 1) {
				this.curItem.optional[o] = i.optional[o]
			}
		}
		var recordNext = [];
		var aaa = 2; + function cs() {
			var next = function() {
				var min = 10;
				var next;
				for(var x = 0; x < 9; x += 1) {
					for(var y = 0; y < 9; y += 1) {
						if(m.x[x][y].optionalNumber < min && m.x[x][y].value == 0) {
							next = m.x[x][y];
							min = next.optionalNumber
						}
					}
				}
				return next
			}();
			if(next == undefined) {
				m.WriteLog("计算完毕");
				return
			}
			if(next.optionalNumber != 0) {
				if(next.optionalNumber == 1) {
					for(var i = 0; i < 9; i += 1) {
						if(next.optional[i]) {
							next.setValue(i + 1, true);
							m.WriteLog("位置x：" + next.x + " y：" + next.y + "填入唯一可选数" + next.value);
							cs();
							return
						}
					}
				} else {
					var tmpArray = [];
					var tmpstr = " ";
					for(var i = 0; i < 9; i += 1) {
						if(next.optional[i]) {
							tmpArray.push(i);
							tmpstr += ++i + " "
						}
					}
					var i = tmpArray[parseInt(Math.random() * tmpArray.length)];
					next.removeOptional(i);
					recordNext.push(new backup(next, i));
					next.setValue(i + 1, true);
					m.WriteLog("位置x：" + next.x + " y：" + next.y + "具有多个可选数，填入" + next.value + "可选数" + tmpstr + "已记录");
					cs();
					return
				}
			} else {
				previous()
			}

			function previous() {
				var tmp = recordNext[recordNext.length - 1];
				if(tmp == undefined) {
					alert("该题无解");
					return
				}
				if(next) {
					m.WriteLog("位置x" + next.x + "y" + next.x + "出错，返回至上一次记录的位置x：" + tmp.curItem.x + "y:" + tmp.curItem.y)
				}
				var nextOptional = function() {
					var tmpArray = [];
					for(var i = 0; i < 9; i += 1) {
						if(tmp.curItem.optional[i]) {
							tmpArray.push(i)
						}
					}
					if(tmpArray.length == 0) {
						return null
					}
					return tmpArray[parseInt(Math.random() * tmpArray.length)] + 1
				}();
				if(nextOptional == null) {
					previous2();
					return
				}
				m.x = tmp.allItem;
				m.x[tmp.curItem.x][tmp.curItem.y] = tmp.curItem;
				tmp.curItem.setValue(nextOptional, true);
				cs();
				return
			}

			function previous2() {
				recordNext.pop();
				var tmp2 = recordNext[recordNext.length - 1];
				m.x = tmp2.allItem;
				m.x[tmp2.curItem.x][tmp2.curItem.y] = tmp2.curItem;
				cs();
				return
			}
		}();
	};
	this.Issue = function(difficulty) {
		if(difficulty == undefined) {
			difficulty = 30
		}
		this.lock = getArray(9, false, 9);
		this.clearItemValue();

		function getNum() {
			return parseInt(Math.random() * 9)
		}
		for(var i = 0; i < 12; i += 1) {
			do {
				var x = getNum();
				var y = getNum();
				this.x[x][y].setValue(getNum());
				if(this.checkError().length) {
					this.x[x][y].setValue(0)
				} else {
					break
				}
			} while (true)
		}
		this.Calculator();
		var i = 0;
		while(i < difficulty) {
			var x = getNum();
			var y = getNum();
			if(!this.lock[x][y]) {
				this.lock[x][y] = true;
				i += 1
			}
		}
		this.clearItemValue()
	};
	this.WriteLog = function(value) {
		var log = document.querySelector("textarea");
		log.innerHTML = log.innerHTML + value + "&#10;";
		log.scrollTop = log.scrollHeight
	}
}

function keydown(e) {
	if(main.state && main.state != 3) {
		return
	}
	if(e.key == " " || e.key == "0" || e.key == "Backspace" || e.key == "Delete") {
		main.valueChange(0)
	} else if(e.key == "1") {
		main.valueChange(1)
	} else if(e.key == "2") {
		main.valueChange(2)
	} else if(e.key == "3") {
		main.valueChange(3)
	} else if(e.key == "4") {
		main.valueChange(4)
	} else if(e.key == "5") {
		main.valueChange(5)
	} else if(e.key == "6") {
		main.valueChange(6)
	} else if(e.key == "7") {
		main.valueChange(7)
	} else if(e.key == "8") {
		main.valueChange(8)
	} else if(e.key == "9") {
		main.valueChange(9)
	} else if(e.key == "ArrowUp") {
		main.move(-1, 0)
	} else if(e.key == "ArrowRight") {
		main.move(0, 1)
	} else if(e.key == "ArrowDown") {
		main.move(1, 0)
	} else if(e.key == "ArrowLeft") {
		main.move(0, -1)
	}
}
window.onload = function() {
	var map = document.querySelectorAll("#mainMap div");
	main = new Main(map);
	for(var i = 0; i < main.allDiv.length; i += 1) {
		main.allDiv[i].onclick = function() {
			if(main.state && main.state != 3) {
				return
			}
			main.curChange(this)
		}
	}
	document.querySelector(".btn").style.display = "block";
	document.querySelector(".main h1 span input.senior").onchange = SeniorShow;
	document.querySelector(".main .bottom .function span input.ckbLog").onchange = LogShow;
	document.querySelector(".main .bottom .function span input.contrast").onchange = contrast;
	document.getElementById("solve").onclick = Solve;
	document.querySelector(".start").onclick = Start;
	document.querySelector(".end").onclick = Random;
	document.getElementById("btn").onclick = Stop;
	document.getElementById("reset").onclick = Reset;
	document.getElementById("Manual").onclick = Manual;
	document.querySelector(".main h1 span input.senior").checked = true;
	SeniorShow()
};

function Start() {
	if(main.state == 2) {
		document.querySelector(".start").style.display = "none";
		document.querySelector(".btn p").style.display = "block";
		document.querySelector(".end").style.display = "block"
	} else {
		alert("开始游戏失败，请刷新页面后重试！")
	}
}

function Random() {
	if(main.state == 2) {
		document.querySelector(".btn").style.display = "none";
		document.querySelector(".start").style.display = "none";
		document.querySelector(".btn p").style.display = "none";
		document.querySelector(".end").style.display = "none";
		main.clearSign();
		main.Issue(function() {
			if(document.getElementById("high").checked) {
				return 26
			} else if(document.getElementById("middle").checked) {
				return 38
			} else {
				return 45
			}
		}());
		main.curItem = main.x[0][0];
		main.sign();
		main.Time = setInterval(main.timing, 1000);
		main.state = 0;
		main.timeValue = 0;
		main.count = 0
	} else {
		alert("开始游戏失败，请刷新页面后重试！")
	}
}

function Stop() {
	if(main.state == 0) {
		document.querySelector(".btn").style.display = "block";
		document.querySelector(".start").style.display = "block";
		document.querySelector(".start").value = "继续游戏";
		document.querySelector(".start").onclick = Stop;
		document.getElementById("btn").value = "继续游戏";
		clearInterval(main.Time);
		main.state = 1
	} else if(main.state == 1) {
		document.querySelector(".btn").style.display = "none";
		document.querySelector(".start").style.display = "none";
		document.getElementById("btn").value = "暂停游戏";
		main.Time = setInterval(main.timing, 1000);
		main.state = 0
	} else {
		alert("请先开始游戏")
	}
}

function Victory() {
	document.querySelector(".btn").style.display = "block";
	document.querySelector(".start").style.display = "block";
	document.querySelector(".start").value = "再来一局";
	document.querySelector(".start").onclick = Random;
	clearInterval(main.Time);
	main.state = 2;
	if(document.querySelector(".main .bottom span input.contrast").checked) {
		document.querySelector(".main .bottom span input.contrast").checked = false;
		contrast()
	}
	alert("游戏胜利")
}

function Solve() {
	if(main.state) {
		alert("请先开始游戏");
		return
	}
	main.Calculator()
}

function Reset() {
	if(main.state == 2) {
		Random();
	} else {
		if(confirm("你要放弃本局游戏吗？")) {
			if(main.state == 1) {
				document.getElementById("btn").value = "暂停游戏"
			}
			main.clearlock();
			main.clearItemValue();
			main.state = 2;
			if(document.querySelector(".main .bottom span input.contrast").checked) {
				document.querySelector(".main .bottom span input.contrast").checked = false;
				contrast()
			}
			clearInterval(main.Time);
			Random()
		}
	}
}

function Manual() {
	var bt = document.getElementById("Manual");
	if(main.state < 2) {
		if(confirm("你要放弃本局游戏吗？")) {
			main.clearlock();
			main.clearItemValue();
			main.clearSign();
			clearInterval(main.Time)
		} else {
			return
		}
	}
	if(bt.value == "手动输入") {
		document.querySelector(".btn").style.display = "none";
		document.querySelector(".start").style.display = "none";
		document.querySelector(".btn p").style.display = "none";
		document.querySelector(".end").style.display = "none";
		if(document.querySelector(".main .bottom span input.contrast").checked) {
			document.querySelector(".main .bottom span input.contrast").checked = false;
			contrast()
		}
		main.state = 3;
		bt.value = "输入完成"
	} else {
		if(main.checkError().length) {
			alert("该题有错误，请确认！");
			return
		}
		main.lockNotNullDiv();
		main.Time = setInterval(main.timing, 1000);
		main.sign();
		main.state = 0;
		main.timeValue = 0;
		main.count = 0;
		bt.value = "手动输入"
	}
}

function SeniorShow() {
	var ckb = document.querySelector(".main h1 span input.senior");
	var Senior = document.querySelector(".bottom .function");
	if(ckb.checked) {
		Senior.style.display = "block"
	} else {
		Senior.style.display = "none"
	}
}

function LogShow() {
	var ckb = document.querySelector(".main .bottom span input.ckbLog");
	var log = document.querySelector(".main .bottom textarea");
	if(ckb.checked) {
		log.style.display = "block";
		log.scrollTop = log.scrollHeight;
		document.querySelector(".main").style.top = "130px";
		document.querySelector(".main h1").style.top = "-96px";
		document.querySelector(".main .coord").style.display = "block"
	} else {
		log.style.display = "none";
		document.querySelector(".main h1").style = "";
		document.querySelector(".main").style = "";
		document.querySelector(".main .coord").style.display = "none"
	}
}

function contrast() {
	var ckb = document.querySelector(".main .bottom span input.contrast");
	var m1 = document.querySelector("#mainMap");
	var cmain = document.querySelector(".main");
	if(ckb.checked) {
		if(main.state != 0) {
			alert("请先开始游戏");
			ckb.checked = false;
			return
		}
		var m2 = document.createElement("div");
		m2.className = "jgg";
		m2.id = "viceMap";
		m2.innerHTML = (function() {
			var x = 0,
				y = 0;
			var html = "";
			for(var i = 0; i < 81; i += 1) {
				if(y > 8) {
					y = 0;
					x += 1
				}
				html += `<div data-x="${ x }" data-y="${y++}"></div>`
			}
			return html
		})();
		cmain.appendChild(m2);
		cmain.style.width = "1200px";
		m2.style.left = "680px";
		main2 = new Main(m2.querySelectorAll("div"));
		for(var x = 0; x < 9; x += 1) {
			for(var y = 0; y < 9; y += 1) {
				main2.x[x][y].setValue(main.x[x][y].value)
			}
		}
		main2.lock = main.lock;
		main2.Calculator();
	} else {
		cmain.style.width = "";
		document.getElementById("viceMap").remove();
		main2 = null
	}
}